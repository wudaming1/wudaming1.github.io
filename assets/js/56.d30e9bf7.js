(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{345:function(e,s,t){"use strict";t.r(s);var l=t(14),r=Object(l.a)({},(function(){var e=this,s=e._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"scrollable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scrollable"}},[e._v("#")]),e._v(" Scrollable")]),e._v(" "),s("p",[e._v("负责更新 Viewport 的 SliverConstrains，通过 Listener 监听用户滚动，计算滚动距离，更新 Viewport layout。")]),e._v(" "),s("h2",{attrs:{id:"rawgesturedetector"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rawgesturedetector"}},[e._v("#")]),e._v(" RawGestureDetector")]),e._v(" "),s("p",[e._v("手势监听，负责将收到的手势信息传递给 ScrollPosition。")]),e._v(" "),s("h2",{attrs:{id:"scrollposition"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scrollposition"}},[e._v("#")]),e._v(" ScrollPosition")]),e._v(" "),s("p",[e._v("它实现了 Observe 模式，可以注册监听。在整个滑动流程中，负责分发所有手势信息。")]),e._v(" "),s("p",[e._v("RenderViewportBase:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("  @override\n  void attach(PipelineOwner owner) {\n    super.attach(owner);\n    _offset.addListener(markNeedsLayout);\n  }\n")])])]),s("p",[e._v("这里的 _offset 是 ViewportOffset，ScrollPosition 是 ViewportOffset 的子类。")]),e._v(" "),s("p",[e._v("ScrollPosition:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("  double setPixels(double newPixels) {\n    assert(hasPixels);\n    assert(SchedulerBinding.instance.schedulerPhase != SchedulerPhase.persistentCallbacks, \"A scrollable's position should not change during the build, layout, and paint phases, otherwise the rendering will be confused.\");\n    if (newPixels != pixels) {\n      final double overscroll = applyBoundaryConditions(newPixels);\n      assert(() {\n        final double delta = newPixels - pixels;\n        if (overscroll.abs() > delta.abs()) {\n          throw FlutterError(\n            '$runtimeType.applyBoundaryConditions returned invalid overscroll value.\\n'\n            'setPixels() was called to change the scroll offset from $pixels to $newPixels.\\n'\n            'That is a delta of $delta units.\\n'\n            '$runtimeType.applyBoundaryConditions reported an overscroll of $overscroll units.',\n          );\n        }\n        return true;\n      }());\n      final double oldPixels = pixels;\n      _pixels = newPixels - overscroll;\n      if (_pixels != oldPixels) {\n        notifyListeners();\n        didUpdateScrollPositionBy(pixels - oldPixels);\n      }\n      if (overscroll != 0.0) {\n        didOverscrollBy(overscroll);\n        return overscroll;\n      }\n    }\n    return 0.0;\n  }\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);