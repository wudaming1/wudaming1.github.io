(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{366:function(t,e,s){"use strict";s.r(e);var a=s(14),o=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"keytool"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#keytool"}},[t._v("#")]),t._v(" keytool")]),t._v(" "),e("p",[t._v("keytool是一个java数据证书管理工具。keytool将密钥和证书存在一个称为keystore的文件中。\n在keystore中包括两种数据：")]),t._v(" "),e("ul",[e("li",[t._v("密钥实体：非对称加密的私钥。")]),t._v(" "),e("li",[t._v("可信任证书实体：包含非对称加密公钥，及其他一些信息。")])]),t._v(" "),e("h2",{attrs:{id:"生成keystore命令解释"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生成keystore命令解释"}},[t._v("#")]),t._v(" 生成keystore命令解释")]),t._v(" "),e("p",[t._v('keytool -genkey -alias "tomcat" -keyalg "RSA" -keystore "d:\\mykeystore"  -dname "CN=localhost, OU=localhost, O=localhost, L=SH, ST=SH, C=CN" -keypass "changeit" -storepass -validity 180\n参数说明：')]),t._v(" "),e("ol",[e("li",[t._v("-genkey表示要创建一个新的密钥")]),t._v(" "),e("li",[t._v("-dname表示密钥的Distinguished Names，表明了密钥的发行者身份")]),t._v(" "),e("li",[t._v("CN=commonName")]),t._v(" "),e("li",[t._v("OU=organizationUnit")]),t._v(" "),e("li",[t._v("O=organizationName")]),t._v(" "),e("li",[t._v("L=localityName")]),t._v(" "),e("li",[t._v("S=stateName")]),t._v(" "),e("li",[t._v("C=country")]),t._v(" "),e("li",[t._v("-keyalg使用加密的算法，这里是RSA")]),t._v(" "),e("li",[t._v("-alias密钥的别名")]),t._v(" "),e("li",[t._v("-keypass私有密钥的密码，这里设置为changeit")]),t._v(" "),e("li",[t._v("-keystore 密钥保存在D:盘目录下的mykeystore文件中")]),t._v(" "),e("li",[t._v("-storepass 存取密码，这里设置为changeit，这个密码提供系统从mykeystore文件中将信息取出")]),t._v(" "),e("li",[t._v("-validity该密钥的有效期为 180天 (默认为90天)")])]),t._v(" "),e("h2",{attrs:{id:"创建keystore证书-服务器使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建keystore证书-服务器使用"}},[t._v("#")]),t._v(" 创建keystore证书（服务器使用）")]),t._v(" "),e("p",[e("strong",[t._v("生成证书时，CN要和服务器的域名相同，如果在本地测试，则使用localhost")]),t._v('\nkeytool -genkey -alias "tomcat" -keyalg "RSA" -keystore "mykeystore.jks " -dname "CN=172.28.16.227, OU=localhost, O=localhost, L=SH, ST=SH, C=CN" -keypass "123456" -storepass "123456"')]),t._v(" "),e("h2",{attrs:{id:"导出数字证书-客户端使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#导出数字证书-客户端使用"}},[t._v("#")]),t._v(" 导出数字证书（客户端使用）")]),t._v(" "),e("p",[e("strong",[t._v("通过上一步生成的keystore来导出数字证书")]),t._v("\nkeytool -export -alias tomcat -keystore mykeystore -file localhost.cer -storepass 123456")]),t._v(" "),e("h2",{attrs:{id:"客户端配置-为jvm导入数字证书"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#客户端配置-为jvm导入数字证书"}},[t._v("#")]),t._v(" 客户端配置：为JVM导入数字证书")]),t._v(" "),e("p",[t._v('keytool -import -trustcacerts -alias tomcat -keystore "%JAVA_HOME%/jre/lib/security/cacerts " -file d:\\mycerts.cer -storepass changeit')]),t._v(" "),e("p",[t._v("生成的证书可以交付客户端用户使用，用以进行SSL通讯，或者伴随电子签名的jar包进行发布者的身份认证。")]),t._v(" "),e("p",[t._v("常出现的异常：“未找到可信任的证书”--主要原因为在客户端未将服务器下发的证书导入到JVM中，可以用")]),t._v(" "),e("p",[t._v('keytool -list -alias tomcat -keystore "%JAVA_HOME%/JRE/LIB/SECURITY/CACERTS" -storepass changeit')]),t._v(" "),e("p",[t._v('keytool -list -v -keystore "%JAVA_HOME%/JRE/LIB/SECURITY/CACERTS" -storepass 123456')]),t._v(" "),e("p",[t._v('linux: #keytool -list -alias tomcat -keystore "$JAVA_HOME/jre/lib/security/cacerts" -storepass changeit')]),t._v(" "),e("p",[t._v("来查看证书是否真的导入到JVM中。")]),t._v(" "),e("p",[t._v("keytool生成根证书时出现如下错误：")]),t._v(" "),e("p",[t._v("keytool错误:java.io.IOException:keystore was tampered with,or password was incorrect")]),t._v(" "),e("p",[t._v('原因是在你的home目录下是否还有.keystore存在。如果存在那么把他删除掉，然后再执行或者删除"%JAVA_HOME%/jre/lib/security/cacerts 再执行')]),t._v(" "),e("p",[t._v("##参考资料\n"),e("a",{attrs:{href:"https://www.cnblogs.com/benwu/articles/4891758.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("keytool工具应用实例详解"),e("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=o.exports}}]);